generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Name {
  id    Int    @id @default(autoincrement())
  val   String
  nodes Node[]
  edges Edge[]
}

model Size {
  id    Int    @id @default(autoincrement())
  val   Int    @default(0)
  min   Int?
  max   Int?
  nodes Node[]
  edges Edge[]
}

model Node {
  id     Int    @id @default(autoincrement())
  name   Name?  @relation(fields: [nameId], references: [id])
  nameId Int?
  size   Size   @relation(fields: [sizeId], references: [id])
  sizeId Int
  ins    Edge[] @relation("out")
  outs   Edge[] @relation("in")
  asPack Pack?  @relation("asPack")
  packs  Pack[]
  asPort Port?  @relation("asPort")
}

model Edge {
  id     Int   @id @default(autoincrement())
  name   Name? @relation(fields: [nameId], references: [id])
  nameId Int?
  size   Size  @relation(fields: [sizeId], references: [id])
  sizeId Int
  in     Node  @relation("in", fields: [inId], references: [id])
  inId   Int
  out    Node  @relation("out", fields: [outId], references: [id])
  outId  Int
}

model Pack {
  id     Int    @id @default(autoincrement())
  base   Node   @relation("asPack", fields: [baseId], references: [id])
  baseId Int    @unique
  nodes  Node[]
  ports  Port[]
}

model Port {
  id     Int  @id @default(autoincrement())
  base   Node @relation("asPort", fields: [baseId], references: [id])
  baseId Int  @unique
  pack   Pack @relation(fields: [packId], references: [id])
  packId Int  @unique
}
