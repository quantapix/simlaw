type Query {
  getContributor(githubUsername: ID!): Contributor
  openIssues(label: String!): OpenIssues!
}

type Mutation {
  createContributor(input: CreateContributorInput): Contributor
  updateContributorTags(githubUsername: String!): Contributor
}

input CreateContributorInput {
  githubUsername: String!
  email: String!
  firstName: String!
  acceptsMarketing: Boolean!
}

type Contributor {
  githubUsername: ID!
  email: ID
  github: GitHubInfo
  shopify: ShopifyInfo
}

type GitHubInfo {
  username: ID
  contributionCount: Int!
  pullRequests: [GitHubIssue]
}

type ShopifyInfo {
  id: ID!
  codes: [ShopifyDiscountCode]
}

type ShopifyDiscountCode {
  code: String!
  used: Boolean!
}

type ContributorInformation {
  totalContributions: Int!
  pullRequests: [GitHubIssue]!
}

type OpenPullRequests {
  totalPullRequests: Int!
  pullRequests: [GitHubIssue]!
}

type OpenIssues {
  totalIssues: Int!
  issues: [GitHubIssue]
}

type GitHubIssue {
  id: ID!
  title: String!
  url: String!
  number: Int!
  labels: [GitHubLabel]!
}

type DiscountCode {
  discountCode: String
  errors: [String]!
}

type GitHubLabel {
  name: String!
  url: String!
}
